rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own tasks
    match /tasks/{taskId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Users can read and write their own notes
    match /notes/{noteId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Users can read and write their own achievements
    match /achievements/{achievementId} {
      // Allow read if user owns the achievement
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Allow create if user is creating their own achievement
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      
      // Allow update/delete if user owns the achievement
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Allow reading achievement definitions (for checking what achievements exist)
    match /achievement_definitions/{definitionId} {
      allow read: if request.auth != null;
    }
    
    // Users can read and write their own subjects
    match /subjects/{subjectId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
  }
}
